define("app/serializejson",["require","module","exports","jquery"],function(e,n,r){var t=e("jquery");t.fn.serializeJSON=function(e){var n,r,a,i,s,u,l,o,p,c,d;return n=t.serializeJSON,r=this,a=n.setupOpts(e),i=r.serializeArray(),n.readCheckboxUncheckedValues(i,a,r),s={},t.each(i,function(e,t){u=t.name,l=t.value,o=n.extractTypeAndNameWithNoType(u),p=o.nameWithNoType,c=o.type,c||(c=n.tryToFindTypeFromDataAttr(u,r)),n.validateType(u,c,a),"skip"!==c&&(d=n.splitInputNameIntoKeysArray(p),l=n.parseValue(l,u,c,a),n.deepSet(s,d,l,a))}),s},t.serializeJSON={defaultOptions:{checkboxUncheckedValue:void 0,parseNumbers:!1,parseBooleans:!1,parseNulls:!1,parseAll:!1,parseWithFunction:null,customTypes:{},defaultTypes:{string:function(e){return String(e)},number:function(e){return Number(e)},boolean:function(e){return-1===["false","null","undefined","","0"].indexOf(e)},null:function(e){return-1===["false","null","undefined","","0"].indexOf(e)?e:null},array:function(e){return JSON.parse(e)},object:function(e){return JSON.parse(e)},auto:function(e){return t.serializeJSON.parseValue(e,null,null,{parseNumbers:!0,parseBooleans:!0,parseNulls:!0})},skip:null},useIntKeysAsArrayIndex:!1},setupOpts:function(e){var n,r,a,i,s,u;u=t.serializeJSON,null==e&&(e={}),a=u.defaultOptions||{},r=["checkboxUncheckedValue","parseNumbers","parseBooleans","parseNulls","parseAll","parseWithFunction","customTypes","defaultTypes","useIntKeysAsArrayIndex"];for(n in e)if(-1===r.indexOf(n))throw new Error("serializeJSON ERROR: invalid option '"+n+"'. Please use one of "+r.join(", "));return i=function(n){return!1!==e[n]&&""!==e[n]&&(e[n]||a[n])},s=i("parseAll"),{checkboxUncheckedValue:i("checkboxUncheckedValue"),parseNumbers:s||i("parseNumbers"),parseBooleans:s||i("parseBooleans"),parseNulls:s||i("parseNulls"),parseWithFunction:i("parseWithFunction"),typeFunctions:t.extend({},i("defaultTypes"),i("customTypes")),useIntKeysAsArrayIndex:i("useIntKeysAsArrayIndex")}},parseValue:function(e,n,r,a){var i,s;return i=t.serializeJSON,s=e,a.typeFunctions&&r&&a.typeFunctions[r]?s=a.typeFunctions[r](e):a.parseNumbers&&i.isNumeric(e)?s=Number(e):!a.parseBooleans||"true"!==e&&"false"!==e?a.parseNulls&&"null"==e&&(s=null):s="true"===e,a.parseWithFunction&&!r&&(s=a.parseWithFunction(s,n)),s},isObject:function(e){return e===Object(e)},isUndefined:function(e){return void 0===e},isValidArrayIndex:function(e){return/^[0-9]+$/.test(String(e))},isNumeric:function(e){return e-parseFloat(e)>=0},optionKeys:function(e){if(Object.keys)return Object.keys(e);var n,r=[];for(n in e)r.push(n);return r},readCheckboxUncheckedValues:function(e,n,r){var a,i,s,u,l;null==n&&(n={}),l=t.serializeJSON,a="input[type=checkbox][name]:not(:checked):not([disabled])",i=r.find(a).add(r.filter(a)),i.each(function(r,a){s=t(a),u=s.attr("data-unchecked-value"),u?e.push({name:a.name,value:u}):l.isUndefined(n.checkboxUncheckedValue)||e.push({name:a.name,value:n.checkboxUncheckedValue})})},extractTypeAndNameWithNoType:function(e){var n;return(n=e.match(/(.*):([^:]+)$/))?{nameWithNoType:n[1],type:n[2]}:{nameWithNoType:e,type:null}},tryToFindTypeFromDataAttr:function(e,n){var r,t,a;return r=e.replace(/(\[|\])/g,"\\$1"),t='[name="'+r+'"]',a=n.find(t).add(n.filter(t)),a.attr("data-value-type")||null},validateType:function(e,n,r){var a,i;if(i=t.serializeJSON,a=i.optionKeys(r?r.typeFunctions:i.defaultOptions.defaultTypes),n&&-1===a.indexOf(n))throw new Error("serializeJSON ERROR: Invalid type "+n+" found in input name '"+e+"', please use one of "+a.join(", "));return!0},splitInputNameIntoKeysArray:function(e){var n;return t.serializeJSON,n=e.split("["),n=t.map(n,function(e){return e.replace(/\]/g,"")}),""===n[0]&&n.shift(),n},deepSet:function(e,n,r,a){var i,s,u,l,o,p;if(null==a&&(a={}),p=t.serializeJSON,p.isUndefined(e))throw new Error("ArgumentError: param 'o' expected to be an object or array, found undefined");if(!n||0===n.length)throw new Error("ArgumentError: param 'keys' expected to be an array with least one element");i=n[0],1===n.length?""===i?e.push(r):e[i]=r:(s=n[1],""===i&&(l=e.length-1,o=e[l],i=p.isObject(o)&&(p.isUndefined(o[s])||n.length>2)?l:l+1),""===s?!p.isUndefined(e[i])&&t.isArray(e[i])||(e[i]=[]):a.useIntKeysAsArrayIndex&&p.isValidArrayIndex(s)?!p.isUndefined(e[i])&&t.isArray(e[i])||(e[i]=[]):!p.isUndefined(e[i])&&p.isObject(e[i])||(e[i]={}),u=n.slice(1),p.deepSet(e[i],u,r,a))}}});