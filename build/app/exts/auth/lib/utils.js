define("app/exts/auth/lib/utils",["jquery","underscore"],function($,_){return{toJSON:function(cfg){cfg=cfg.replace(/'/g,'"');try{eval("cfg="+cfg)}catch(e){console.log&&console.log("data-valid json is invalid")}return cfg},guid:function(){return"AUTH_"+$.guid++},getEvent:function(e){var t="blur";switch($(e).attr("type")||$(e).attr("data-type")){case"select":t="change";break;case"select-multiple":case"radio":case"checkbox":t="click change";break;default:t="blur"}return t},getValue:function(e){var t=[];switch($(e).attr("type")){case"select-multiple":$.each(e.options,function(e){e.selected&&t.push(e.value)});break;case"radio":case"checkbox":$.each(e,function(e){e.checked&&t.push(e.value)});break;default:t=$(e).val()}return t},later:function(e,t,c,n,a){t=t||0;var r,u,l=e,i=$.makeArray(a);return"string"==typeof e&&(l=n[e]),l||console.error&&console.error("method undefined"),r=function(){l.apply(n,i)},u=c?setInterval(r,t):setTimeout(r,t),{id:u,interval:c,cancel:function(){this.interval?clearInterval(u):clearTimeout(u)}}},buffer:function(e,t,c){function n(){n.stop(),r=a.later(e,t,0,c||a,arguments)}var a=this;if(-1===(t=t||150))return function(){e.apply(c||a,arguments)};var r=null;return n.stop=function(){r&&(r.cancel(),r=0)},n}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dHMvYXV0aC9saWIvdXRpbHMuanMiXSwibmFtZXMiOlsiZGVmaW5lIiwiJCIsIl8iLCJ0b0pTT04iLCJjZmciLCJyZXBsYWNlIiwiZXZhbCIsImUiLCJjb25zb2xlIiwibG9nIiwiZ3VpZCIsImdldEV2ZW50IiwiZWxzIiwiZXZlbnQiLCJhdHRyIiwiZ2V0VmFsdWUiLCJ2YWwiLCJlYWNoIiwib3B0aW9ucyIsImVsIiwic2VsZWN0ZWQiLCJwdXNoIiwidmFsdWUiLCJjaGVja2VkIiwibGF0ZXIiLCJmbiIsIndoZW4iLCJwZXJpb2RpYyIsImNvbnRleHQiLCJkYXRhIiwiZiIsInIiLCJtIiwiZCIsIm1ha2VBcnJheSIsImVycm9yIiwiYXBwbHkiLCJzZXRJbnRlcnZhbCIsInNldFRpbWVvdXQiLCJpZCIsImludGVydmFsIiwiY2FuY2VsIiwidGhpcyIsImNsZWFySW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJidWZmZXIiLCJtcyIsInN0b3AiLCJidWZmZXJUaW1lciIsIm1lIiwiYXJndW1lbnRzIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTywyQkFDTCxTQUNBLGNBQ0MsU0FBU0MsRUFBR0MsR0FDYixPQUNFQyxPQUFRLFNBQVVDLEtBQ2hCQSxJQUFNQSxJQUFJQyxRQUFRLEtBQU0sSUFDeEIsS0FDRUMsS0FBSyxPQUFTRixLQUNkLE1BQU9HLEdBQ1BDLFFBQVFDLEtBQU9ELFFBQVFDLElBQUksOEJBRTdCLE1BQU9MLE1BRVRNLEtBQU0sV0FDSixNQUFPLFFBQVVULEVBQUVTLFFBT3JCQyxTQUFVLFNBQVNDLEdBQ2pCLEdBQUlDLEdBQVEsTUFFWixRQURZWixFQUFFVyxHQUFLRSxLQUFLLFNBQVdiLEVBQUVXLEdBQUtFLEtBQUssY0FFN0MsSUFBSyxTQUNIRCxFQUFRLFFBQ1IsTUFDRixLQUFLLGtCQUNMLElBQUssUUFHTCxJQUFLLFdBQ0hBLEVBQU0sY0FDTixNQUNGLFNBQ0VBLEVBQVEsT0FFWixNQUFPQSxJQUVURSxTQUFVLFNBQVNILEdBQ2pCLEdBQUlJLEtBRUosUUFEV2YsRUFBRVcsR0FBS0UsS0FBSyxTQUVyQixJQUFLLGtCQUNIYixFQUFFZ0IsS0FBS0wsRUFBSU0sUUFBUyxTQUFTQyxHQUN2QkEsRUFBR0MsVUFBVUosRUFBSUssS0FBS0YsRUFBR0csUUFFL0IsTUFDRixLQUFLLFFBQ0wsSUFBSyxXQUNIckIsRUFBRWdCLEtBQUtMLEVBQUssU0FBU08sR0FDZkEsRUFBR0ksU0FBU1AsRUFBSUssS0FBS0YsRUFBR0csUUFFOUIsTUFDRixTQUNFTixFQUFNZixFQUFFVyxHQUFLSSxNQUVqQixNQUFPQSxJQUVUUSxNQUFPLFNBQVVDLEVBQUlDLEVBQU1DLEVBQVVDLEVBQVNDLEdBQzVDSCxFQUFPQSxHQUFRLENBQ2YsSUFFSUksR0FDQUMsRUFIQUMsRUFBSVAsRUFDSlEsRUFBSWhDLEVBQUVpQyxVQUFVTCxFQWtCcEIsT0Fka0IsZ0JBQVBKLEtBQ1RPLEVBQUlKLEVBQVFILElBR1RPLEdBQ0h4QixRQUFRMkIsT0FBUzNCLFFBQVEyQixNQUFNLG9CQUdqQ0wsRUFBSSxXQUNGRSxFQUFFSSxNQUFNUixFQUFTSyxJQUduQkYsRUFBSSxFQUFhTSxZQUFZUCxFQUFHSixHQUFRWSxXQUFXUixFQUFHSixJQUdwRGEsR0FBSVIsRUFDSlMsU0FBVWIsRUFDVmMsT0FBUSxXQUNGQyxLQUFLRixTQUNQRyxjQUFjWixHQUVkYSxhQUFhYixNQUtyQmMsT0FBUSxTQUFVcEIsRUFBSXFCLEVBQUlsQixHQVl4QixRQUFTRSxLQUNQQSxFQUFFaUIsT0FDRkMsRUFBY0MsRUFBR3pCLE1BQU1DLEVBQUlxQixFQUFJLEVBQUdsQixHQUFXcUIsRUFBSUMsV0FibkQsR0FBSUQsR0FBS1AsSUFJVCxLQUFZLEtBRlpJLEVBQUtBLEdBQU0sS0FHVCxNQUFPLFlBQ0xyQixFQUFHVyxNQUFNUixHQUFXcUIsRUFBSUMsV0FHNUIsSUFBSUYsR0FBYyxJQWNsQixPQVBBbEIsR0FBRWlCLEtBQU8sV0FDSEMsSUFDRkEsRUFBWVAsU0FDWk8sRUFBYyxJQUlYbEIiLCJmaWxlIjoiZXh0cy9hdXRoL2xpYi91dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSgnYXBwL2V4dHMvYXV0aC9saWIvdXRpbHMnLCBbXG4gICdqcXVlcnknLFxuICAndW5kZXJzY29yZSdcbl0sIGZ1bmN0aW9uKCQsIF8pIHtcbiAgcmV0dXJuIHtcbiAgICB0b0pTT046IGZ1bmN0aW9uIChjZmcpIHtcbiAgICAgIGNmZyA9IGNmZy5yZXBsYWNlKC8nL2csICdcIicpXG4gICAgICB0cnkge1xuICAgICAgICBldmFsKCdjZmc9JyArIGNmZylcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2cgJiYgY29uc29sZS5sb2coJ2RhdGEtdmFsaWQganNvbiBpcyBpbnZhbGlkJylcbiAgICAgIH1cbiAgICAgIHJldHVybiBjZmdcbiAgICB9LFxuICAgIGd1aWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAnQVVUSF8nICsgJC5ndWlkKytcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIOagueaNruWFg+e0oOexu+Wei+adpee7keWumum7mOiupOeahOS6i+S7tlxuICAgICAqIEBwYXJhbSBlbHNcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAgICovXG4gICAgZ2V0RXZlbnQ6IGZ1bmN0aW9uKGVscykge1xuICAgICAgdmFyIGV2ZW50ID0gJ2JsdXInXG4gICAgICB2YXIgIHR5cGUgPSAkKGVscykuYXR0cigndHlwZScpIHx8ICQoZWxzKS5hdHRyKCdkYXRhLXR5cGUnKVxuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgJ3NlbGVjdCc6XG4gICAgICAgICAgZXZlbnQgPSAnY2hhbmdlJ1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgJ3NlbGVjdC1tdWx0aXBsZSc6XG4gICAgICAgIGNhc2UgJ3JhZGlvJzpcbiAgICAgICAgICBldmVudD0nY2xpY2sgY2hhbmdlJ1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgJ2NoZWNrYm94JzpcbiAgICAgICAgICBldmVudD0nY2xpY2sgY2hhbmdlJ1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgZXZlbnQgPSAnYmx1cidcbiAgICAgIH1cbiAgICAgIHJldHVybiBldmVudFxuICAgIH0sXG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uKGVscykge1xuICAgICAgdmFyIHZhbCA9IFtdXG4gICAgICB2YXIgdHlwZSA9ICQoZWxzKS5hdHRyKCd0eXBlJylcbiAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlICdzZWxlY3QtbXVsdGlwbGUnOlxuICAgICAgICAgICQuZWFjaChlbHMub3B0aW9ucywgZnVuY3Rpb24oZWwpIHtcbiAgICAgICAgICAgIGlmIChlbC5zZWxlY3RlZCkgdmFsLnB1c2goZWwudmFsdWUpXG4gICAgICAgICAgfSlcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIFwicmFkaW9cIjpcbiAgICAgICAgY2FzZSBcImNoZWNrYm94XCI6XG4gICAgICAgICAgJC5lYWNoKGVscywgZnVuY3Rpb24oZWwpIHtcbiAgICAgICAgICAgIGlmIChlbC5jaGVja2VkKSB2YWwucHVzaChlbC52YWx1ZSlcbiAgICAgICAgICB9KVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdmFsID0gJChlbHMpLnZhbCgpXG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsXG4gICAgfSxcbiAgICBsYXRlcjogZnVuY3Rpb24gKGZuLCB3aGVuLCBwZXJpb2RpYywgY29udGV4dCwgZGF0YSkge1xuICAgICAgd2hlbiA9IHdoZW4gfHwgMFxuICAgICAgdmFyIG0gPSBmblxuICAgICAgdmFyIGQgPSAkLm1ha2VBcnJheShkYXRhKVxuICAgICAgdmFyIGZcbiAgICAgIHZhciByXG5cbiAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG0gPSBjb250ZXh0W2ZuXVxuICAgICAgfVxuXG4gICAgICBpZiAoIW0pIHtcbiAgICAgICAgY29uc29sZS5lcnJvciAmJiBjb25zb2xlLmVycm9yKCdtZXRob2QgdW5kZWZpbmVkJylcbiAgICAgIH1cblxuICAgICAgZiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbS5hcHBseShjb250ZXh0LCBkKVxuICAgICAgfVxuXG4gICAgICByID0gKHBlcmlvZGljKSA/IHNldEludGVydmFsKGYsIHdoZW4pIDogc2V0VGltZW91dChmLCB3aGVuKVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogcixcbiAgICAgICAgaW50ZXJ2YWw6IHBlcmlvZGljLFxuICAgICAgICBjYW5jZWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAodGhpcy5pbnRlcnZhbCkge1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChyKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQocilcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGJ1ZmZlcjogZnVuY3Rpb24gKGZuLCBtcywgY29udGV4dCkge1xuICAgICAgdmFyIG1lID0gdGhpc1xuXG4gICAgICBtcyA9IG1zIHx8IDE1MFxuXG4gICAgICBpZiAobXMgPT09IC0xKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZm4uYXBwbHkoY29udGV4dCB8fCBtZSwgYXJndW1lbnRzKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgYnVmZmVyVGltZXIgPSBudWxsXG5cbiAgICAgIGZ1bmN0aW9uIGYoKSB7XG4gICAgICAgIGYuc3RvcCgpXG4gICAgICAgIGJ1ZmZlclRpbWVyID0gbWUubGF0ZXIoZm4sIG1zLCAwLCBjb250ZXh0IHx8IG1lLCBhcmd1bWVudHMpXG4gICAgICB9XG5cbiAgICAgIGYuc3RvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGJ1ZmZlclRpbWVyKSB7XG4gICAgICAgICAgYnVmZmVyVGltZXIuY2FuY2VsKClcbiAgICAgICAgICBidWZmZXJUaW1lciA9IDBcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZlxuICAgIH1cbiAgfVxufSkiXX0=
