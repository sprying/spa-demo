define("app/exts/arale/events",function(){function t(){}function r(t,r,e){var n=!0;if(t){var o=0,i=t.length,s=r[0],f=r[1],a=r[2];switch(r.length){case 0:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e)&&n;break;case 1:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e,s)&&n;break;case 2:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e,s,f)&&n;break;case 3:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e,s,f,a)&&n;break;default:for(;o<i;o+=2)n=!1!==t[o].apply(t[o+1]||e,r)&&n}}return n}function e(t){return"[object Function]"===Object.prototype.toString.call(t)}t.prototype.on=function(t,r,e){var n,o,i;if(!r)return this;for(n=this.__events||(this.__events={}),t=t.split(/\s+/);o=t.shift();)i=n[o]||(n[o]=[]),i.push(r,e);return this},t.prototype.once=function(t,r,e){var n=this,o=function(){n.off(t,o),r.apply(e||n,arguments)};return this.on(t,o,e)},t.prototype.off=function(t,r,e){var o,i,s,f;if(!(o=this.__events))return this;if(!(t||r||e))return delete this.__events,this;for(t=t?t.split(/\s+/):n(o);i=t.shift();)if(s=o[i])if(r||e)for(f=s.length-2;f>=0;f-=2)r&&s[f]!==r||e&&s[f+1]!==e||s.splice(f,2);else delete o[i];return this},t.prototype.trigger=function(t){var e,n,o,i,s,f,a=[],p=!0;if(!(e=this.__events))return this;for(t=t.split(/\s+/),s=1,f=arguments.length;s<f;s++)a[s-1]=arguments[s];for(;n=t.shift();)(o=e.all)&&(o=o.slice()),(i=e[n])&&(i=i.slice()),"all"!==n&&(p=r(i,a,this)&&p),p=r(o,[n].concat(a),this)&&p;return p},t.prototype.emit=t.prototype.trigger;var n=Object.keys;return n||(n=function(t){var r=[];for(var e in t)t.hasOwnProperty(e)&&r.push(e);return r}),t.mixTo=function(r){var n=t.prototype;if(e(r)){for(var o in n)n.hasOwnProperty(o)&&(r.prototype[o]=n[o]);Object.keys(n).forEach(function(t){r.prototype[t]=n[t]})}else{var i=new t;for(var o in n)n.hasOwnProperty(o)&&function(t){r[t]=function(){return n[t].apply(i,Array.prototype.slice.call(arguments)),this}}(o)}},t});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
