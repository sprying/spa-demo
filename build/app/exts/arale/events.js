define("app/exts/arale/events",function(){function t(){}function r(t,r,e){var n=!0;if(t){var o=0,i=t.length,s=r[0],f=r[1],a=r[2];switch(r.length){case 0:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e)&&n;break;case 1:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e,s)&&n;break;case 2:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e,s,f)&&n;break;case 3:for(;o<i;o+=2)n=!1!==t[o].call(t[o+1]||e,s,f,a)&&n;break;default:for(;o<i;o+=2)n=!1!==t[o].apply(t[o+1]||e,r)&&n}}return n}function e(t){return"[object Function]"===Object.prototype.toString.call(t)}var n=/\s+/;t.prototype.on=function(t,r,e){var o,i,s;if(!r)return this;for(o=this.__events||(this.__events={}),t=t.split(n);i=t.shift();)s=o[i]||(o[i]=[]),s.push(r,e);return this},t.prototype.once=function(t,r,e){var n=this,o=function(){n.off(t,o),r.apply(e||n,arguments)};return this.on(t,o,e)},t.prototype.off=function(t,r,e){var i,s,f,a;if(!(i=this.__events))return this;if(!(t||r||e))return delete this.__events,this;for(t=t?t.split(n):o(i);s=t.shift();)if(f=i[s])if(r||e)for(a=f.length-2;a>=0;a-=2)r&&f[a]!==r||e&&f[a+1]!==e||f.splice(a,2);else delete i[s];return this},t.prototype.trigger=function(t){var e,o,i,s,f,a,p=[],c=!0;if(!(e=this.__events))return this;for(t=t.split(n),f=1,a=arguments.length;f<a;f++)p[f-1]=arguments[f];for(;o=t.shift();)(i=e.all)&&(i=i.slice()),(s=e[o])&&(s=s.slice()),"all"!==o&&(c=r(s,p,this)&&c),c=r(i,[o].concat(p),this)&&c;return c},t.prototype.emit=t.prototype.trigger;var o=Object.keys;return o||(o=function(t){var r=[];for(var e in t)t.hasOwnProperty(e)&&r.push(e);return r}),t.mixTo=function(r){var n=t.prototype;if(e(r)){for(var o in n)n.hasOwnProperty(o)&&(r.prototype[o]=n[o]);Object.keys(n).forEach(function(t){r.prototype[t]=n[t]})}else{var i=new t;for(var o in n)n.hasOwnProperty(o)&&function(t){r[t]=function(){return n[t].apply(i,Array.prototype.slice.call(arguments)),this}}(o)}},t});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
